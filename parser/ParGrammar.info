-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParGrammar.y
-----------------------------------------------------------------------------


rule 39 is unused
rule 40 is unused
rule 41 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type 'ref' Ident                            (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type ListItem ';'                          (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> Ident '++' ';'                             (20)
	Stmt -> Ident '--' ';'                             (21)
	Stmt -> 'return' Expr ';'                          (22)
	Stmt -> 'return' ';'                               (23)
	Stmt -> Cndt                                       (24)
	Stmt -> 'while' '(' Expr ')' Stmt                  (25)
	Stmt -> Expr ';'                                   (26)
	Item -> Ident                                      (27)
	Item -> Ident '=' Expr                             (28)
	ListItem -> Item                                   (29)
	ListItem -> Item ',' ListItem                      (30)
	Cndt -> 'if' '(' Expr ')' Block Cndt2              (31)
	Cndt2 -> 'elif' '(' Expr ')' Block Cndt2           (32)
	Cndt2 -> 'else' Block Stmt                         (33)
	Cndt2 -> Stmt                                      (34)
	Type -> 'int'                                      (35)
	Type -> 'string'                                   (36)
	Type -> 'boolean'                                  (37)
	Type -> 'void'                                     (38)
	ListType ->                                        (39)
	ListType -> Type                                   (40)
	ListType -> Type ',' ListType                      (41)
	Expr6 -> Ident                                     (42)
	Expr6 -> Integer                                   (43)
	Expr6 -> 'true'                                    (44)
	Expr6 -> 'false'                                   (45)
	Expr6 -> Ident '(' ListExpr ')'                    (46)
	Expr6 -> String                                    (47)
	Expr6 -> '(' Expr ')'                              (48)
	Expr5 -> '-' Expr6                                 (49)
	Expr5 -> '!' Expr6                                 (50)
	Expr5 -> Expr6                                     (51)
	Expr4 -> Expr4 MulOp Expr5                         (52)
	Expr4 -> Expr5                                     (53)
	Expr3 -> Expr3 AddOp Expr4                         (54)
	Expr3 -> Expr4                                     (55)
	Expr2 -> Expr2 RelOp Expr3                         (56)
	Expr2 -> Expr3                                     (57)
	Expr1 -> Expr2 '&&' Expr1                          (58)
	Expr1 -> Expr2                                     (59)
	Expr -> Expr1 '||' Expr                            (60)
	Expr -> Expr1                                      (61)
	ListExpr ->                                        (62)
	ListExpr -> Expr                                   (63)
	ListExpr -> Expr ',' ListExpr                      (64)
	AddOp -> '+'                                       (65)
	AddOp -> '-'                                       (66)
	MulOp -> '*'                                       (67)
	MulOp -> '/'                                       (68)
	MulOp -> '%'                                       (69)
	RelOp -> '<'                                       (70)
	RelOp -> '<='                                      (71)
	RelOp -> '>'                                       (72)
	RelOp -> '>='                                      (73)
	RelOp -> '=='                                      (74)
	RelOp -> '!='                                      (75)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'boolean'      { PT _ (TS _ 21) }
	'elif'         { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'ref'          { PT _ (TS _ 27) }
	'return'       { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'void'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	Item            rules 27, 28
	ListItem        rules 29, 30
	Cndt            rule  31
	Cndt2           rules 32, 33, 34
	Type            rules 35, 36, 37, 38
	ListType        rules 39, 40, 41
	Expr6           rules 42, 43, 44, 45, 46, 47, 48
	Expr5           rules 49, 50, 51
	Expr4           rules 52, 53
	Expr3           rules 54, 55
	Expr2           rules 56, 57
	Expr1           rules 58, 59
	Expr            rules 60, 61
	ListExpr        rules 62, 63, 64
	AddOp           rules 65, 66
	MulOp           rules 67, 68, 69
	RelOp           rules 70, 71, 72, 73, 74, 75

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 37)

	'ref'          reduce using rule 37
	L_Ident        reduce using rule 37


State 8

	Type -> 'int' .                                     (rule 35)

	'ref'          reduce using rule 35
	L_Ident        reduce using rule 35


State 9

	Type -> 'string' .                                  (rule 36)

	'ref'          reduce using rule 36
	L_Ident        reduce using rule 36


State 10

	Type -> 'void' .                                    (rule 38)

	'ref'          reduce using rule 38
	L_Ident        reduce using rule 38


State 11

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 13

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 20


State 15

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 19


State 16

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . 'ref' Ident                           (rule 9)

	'ref'          shift, and enter state 18
	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 18

	Arg -> Type 'ref' . Ident                           (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 19

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 23

	Block          goto state 22

State 20

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 21
	Type           goto state 16

State 21

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 22

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 23

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	ListStmt       goto state 29
	Stmt           goto state 30
	Cndt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 24

	Arg -> Type 'ref' Ident .                           (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 25

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Stmt -> Ident . '++' ';'                            (rule 20)
	Stmt -> Ident . '--' ';'                            (rule 21)
	Expr6 -> Ident .                                    (rule 42)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            shift, and enter state 81
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	'++'           shift, and enter state 82
	'-'            reduce using rule 42
	'--'           shift, and enter state 83
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            shift, and enter state 84
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 26

	Expr6 -> Integer .                                  (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 27

	Expr6 -> String .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 28

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 29

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 80


State 30

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	ListStmt       goto state 79
	Stmt           goto state 30
	Cndt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 31

	Stmt -> Cndt .                                      (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 32

	Stmt -> Type . ListItem ';'                         (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 76
	Item           goto state 77
	ListItem       goto state 78

State 33

	Expr5 -> Expr6 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 34

	Expr4 -> Expr5 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 35

	Expr4 -> Expr4 . MulOp Expr5                        (rule 52)
	Expr3 -> Expr4 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 73
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 74
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 75
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 72

State 36

	Expr3 -> Expr3 . AddOp Expr4                        (rule 54)
	Expr2 -> Expr3 .                                    (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 70
	','            reduce using rule 57
	'-'            shift, and enter state 71
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	AddOp          goto state 69

State 37

	Expr2 -> Expr2 . RelOp Expr3                        (rule 56)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 58)
	Expr1 -> Expr2 .                                    (rule 59)

	'!='           shift, and enter state 62
	'&&'           shift, and enter state 63
	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'<'            shift, and enter state 64
	'<='           shift, and enter state 65
	'=='           shift, and enter state 66
	'>'            shift, and enter state 67
	'>='           shift, and enter state 68
	'||'           reduce using rule 59

	RelOp          goto state 61

State 38

	Expr -> Expr1 . '||' Expr                           (rule 60)
	Expr -> Expr1 .                                     (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'||'           shift, and enter state 60


State 39

	Stmt -> Expr . ';'                                  (rule 26)

	';'            shift, and enter state 59


State 40

	Expr5 -> '!' . Expr6                                (rule 50)

	'('            shift, and enter state 41
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 58

State 41

	Expr6 -> '(' . Expr ')'                             (rule 48)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 57

State 42

	Expr5 -> '-' . Expr6                                (rule 49)

	'('            shift, and enter state 41
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 56

State 43

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 44

	Expr6 -> 'false' .                                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 45

	Cndt -> 'if' . '(' Expr ')' Block Cndt2             (rule 31)

	'('            shift, and enter state 55


State 46

	Stmt -> 'return' . Expr ';'                         (rule 22)
	Stmt -> 'return' . ';'                              (rule 23)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 54
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 53

State 47

	Expr6 -> 'true' .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 48

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 25)

	'('            shift, and enter state 51


State 49

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 50

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 51

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 25)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 101

State 52

	Expr6 -> Ident .                                    (rule 42)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            shift, and enter state 81
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 53

	Stmt -> 'return' Expr . ';'                         (rule 22)

	';'            shift, and enter state 100


State 54

	Stmt -> 'return' ';' .                              (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 55

	Cndt -> 'if' '(' . Expr ')' Block Cndt2             (rule 31)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 99

State 56

	Expr5 -> '-' Expr6 .                                (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 57

	Expr6 -> '(' Expr . ')'                             (rule 48)

	')'            shift, and enter state 98


State 58

	Expr5 -> '!' Expr6 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 59

	Stmt -> Expr ';' .                                  (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 60

	Expr -> Expr1 '||' . Expr                           (rule 60)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 97

State 61

	Expr2 -> Expr2 RelOp . Expr3                        (rule 56)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 96

State 62

	RelOp -> '!=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 63

	Expr1 -> Expr2 '&&' . Expr1                         (rule 58)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 95

State 64

	RelOp -> '<' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 65

	RelOp -> '<=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 66

	RelOp -> '==' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 67

	RelOp -> '>' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 68

	RelOp -> '>=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 69

	Expr3 -> Expr3 AddOp . Expr4                        (rule 54)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 94

State 70

	AddOp -> '+' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 71

	AddOp -> '-' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 72

	Expr4 -> Expr4 MulOp . Expr5                        (rule 52)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 93

State 73

	MulOp -> '%' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 74

	MulOp -> '*' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 75

	MulOp -> '/' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 76

	Item -> Ident .                                     (rule 27)
	Item -> Ident . '=' Expr                            (rule 28)

	','            reduce using rule 27
	';'            reduce using rule 27
	'='            shift, and enter state 92


State 77

	ListItem -> Item .                                  (rule 29)
	ListItem -> Item . ',' ListItem                     (rule 30)

	','            shift, and enter state 91
	';'            reduce using rule 29


State 78

	Stmt -> Type ListItem . ';'                         (rule 18)

	';'            shift, and enter state 90


State 79

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 80

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'elif'         reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 81

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 46)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 62
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 88
	ListExpr       goto state 89

State 82

	Stmt -> Ident '++' . ';'                            (rule 20)

	';'            shift, and enter state 87


State 83

	Stmt -> Ident '--' . ';'                            (rule 21)

	';'            shift, and enter state 86


State 84

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 85

State 85

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 108


State 86

	Stmt -> Ident '--' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 87

	Stmt -> Ident '++' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 88

	ListExpr -> Expr .                                  (rule 63)
	ListExpr -> Expr . ',' ListExpr                     (rule 64)

	')'            reduce using rule 63
	','            shift, and enter state 107


State 89

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 46)

	')'            shift, and enter state 106


State 90

	Stmt -> Type ListItem ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 91

	ListItem -> Item ',' . ListItem                     (rule 30)

	L_Ident        shift, and enter state 2

	Ident          goto state 76
	Item           goto state 77
	ListItem       goto state 105

State 92

	Item -> Ident '=' . Expr                            (rule 28)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 104

State 93

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 94

	Expr4 -> Expr4 . MulOp Expr5                        (rule 52)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            shift, and enter state 73
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            shift, and enter state 74
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            shift, and enter state 75
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	MulOp          goto state 72

State 95

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'||'           reduce using rule 58


State 96

	Expr3 -> Expr3 . AddOp Expr4                        (rule 54)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 56)

	'!='           reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'+'            shift, and enter state 70
	','            reduce using rule 56
	'-'            shift, and enter state 71
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	AddOp          goto state 69

State 97

	Expr -> Expr1 '||' Expr .                           (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60


State 98

	Expr6 -> '(' Expr ')' .                             (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 99

	Cndt -> 'if' '(' Expr . ')' Block Cndt2             (rule 31)

	')'            shift, and enter state 103


State 100

	Stmt -> 'return' Expr ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 101

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 25)

	')'            shift, and enter state 102


State 102

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 25)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 111
	Cndt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 103

	Cndt -> 'if' '(' Expr ')' . Block Cndt2             (rule 31)

	'{'            shift, and enter state 23

	Block          goto state 110

State 104

	Item -> Ident '=' Expr .                            (rule 28)

	','            reduce using rule 28
	';'            reduce using rule 28


State 105

	ListItem -> Item ',' ListItem .                     (rule 30)

	';'            reduce using rule 30


State 106

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 107

	ListExpr -> Expr ',' . ListExpr                     (rule 64)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 62
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 88
	ListExpr       goto state 109

State 108

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 109

	ListExpr -> Expr ',' ListExpr .                     (rule 64)

	')'            reduce using rule 64


State 110

	Cndt -> 'if' '(' Expr ')' Block . Cndt2             (rule 31)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'elif'         shift, and enter state 114
	'else'         shift, and enter state 115
	'false'        shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 112
	Cndt           goto state 31
	Cndt2          goto state 113
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 111

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 112

	Cndt2 -> Stmt .                                     (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 113

	Cndt -> 'if' '(' Expr ')' Block Cndt2 .             (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 114

	Cndt2 -> 'elif' . '(' Expr ')' Block Cndt2          (rule 32)

	'('            shift, and enter state 117


State 115

	Cndt2 -> 'else' . Block Stmt                        (rule 33)

	'{'            shift, and enter state 23

	Block          goto state 116

State 116

	Cndt2 -> 'else' Block . Stmt                        (rule 33)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 119
	Cndt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 117

	Cndt2 -> 'elif' '(' . Expr ')' Block Cndt2          (rule 32)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 44
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 118

State 118

	Cndt2 -> 'elif' '(' Expr . ')' Block Cndt2          (rule 32)

	')'            shift, and enter state 120


State 119

	Cndt2 -> 'else' Block Stmt .                        (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 120

	Cndt2 -> 'elif' '(' Expr ')' . Block Cndt2          (rule 32)

	'{'            shift, and enter state 23

	Block          goto state 121

State 121

	Cndt2 -> 'elif' '(' Expr ')' Block . Cndt2          (rule 32)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'elif'         shift, and enter state 114
	'else'         shift, and enter state 115
	'false'        shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 112
	Cndt           goto state 31
	Cndt2          goto state 122
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 122

	Cndt2 -> 'elif' '(' Expr ')' Block Cndt2 .          (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 76
Number of terminals: 38
Number of non-terminals: 29
Number of states: 123
